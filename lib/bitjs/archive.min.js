var bitjs=bitjs||{};bitjs.archive=bitjs.archive||{};
(function(){bitjs.base=function(a,b,c){var d=arguments.callee.caller;if(d.superClass_)return d.superClass_.constructor.apply(a,Array.prototype.slice.call(arguments,1));for(var f=Array.prototype.slice.call(arguments,2),g=!1,e=a.constructor;e;e=e.superClass_&&e.superClass_.constructor)if(e.prototype[b]===d)g=!0;else if(g)return e.prototype[b].apply(a,f);if(a[b]===d)return a.constructor.prototype[b].apply(a,f);throw Error("goog.base called from a method of one name to a method of a different name");};
bitjs.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a};bitjs.archive.UnarchiveEvent=function(a){this.type=a};bitjs.archive.UnarchiveEvent.Type={START:"start",PROGRESS:"progress",EXTRACT:"extract",FINISH:"finish",INFO:"info",ERROR:"error"};bitjs.archive.UnarchiveInfoEvent=function(a){bitjs.base(this,bitjs.archive.UnarchiveEvent.Type.INFO);this.msg=a};bitjs.inherits(bitjs.archive.UnarchiveInfoEvent,bitjs.archive.UnarchiveEvent);
bitjs.archive.UnarchiveErrorEvent=function(a){bitjs.base(this,bitjs.archive.UnarchiveEvent.Type.ERROR);this.msg=a};bitjs.inherits(bitjs.archive.UnarchiveErrorEvent,bitjs.archive.UnarchiveEvent);bitjs.archive.UnarchiveStartEvent=function(){bitjs.base(this,bitjs.archive.UnarchiveEvent.Type.START)};bitjs.inherits(bitjs.archive.UnarchiveStartEvent,bitjs.archive.UnarchiveEvent);bitjs.archive.UnarchiveFinishEvent=function(){bitjs.base(this,bitjs.archive.UnarchiveEvent.Type.FINISH)};bitjs.inherits(bitjs.archive.UnarchiveFinishEvent,
bitjs.archive.UnarchiveEvent);bitjs.archive.UnarchiveProgressEvent=function(a,b,c,d,f,g){bitjs.base(this,bitjs.archive.UnarchiveEvent.Type.PROGRESS);this.currentFilename=a;this.currentFileNumber=b;this.currentBytesUnarchivedInFile=c;this.totalFilesInArchive=g;this.currentBytesUnarchived=d;this.totalUncompressedBytesInArchive=f};bitjs.inherits(bitjs.archive.UnarchiveProgressEvent,bitjs.archive.UnarchiveEvent);bitjs.archive.UnarchiveExtractEvent=function(a){bitjs.base(this,bitjs.archive.UnarchiveEvent.Type.EXTRACT);
this.unarchivedFile=a};bitjs.inherits(bitjs.archive.UnarchiveExtractEvent,bitjs.archive.UnarchiveEvent);bitjs.archive.Unarchiver=function(a,b){this.ab=a;this.pathToBitJS_=b||"";this.listeners_={};for(var c in bitjs.archive.UnarchiveEvent.Type)this.listeners_[bitjs.archive.UnarchiveEvent.Type[c]]=[]};bitjs.archive.Unarchiver.prototype.worker_=null;bitjs.archive.Unarchiver.prototype.getScriptFileName=function(){throw"Subclasses of AbstractUnarchiver must overload getScriptFileName()";};bitjs.archive.Unarchiver.prototype.addEventListener=
function(a,b){a in this.listeners_&&-1==this.listeners_[a].indexOf(b)&&this.listeners_[a].push(b)};bitjs.archive.Unarchiver.prototype.removeEventListener=function(a,b){if(a in this.listeners_){var c=this.listeners_[a].indexOf(b);-1!=c&&this.listeners_[a].splice(c,1)}};bitjs.archive.Unarchiver.prototype.handleWorkerEvent_=function(a){(a instanceof bitjs.archive.UnarchiveEvent||a.type)&&this.listeners_[a.type]instanceof Array?this.listeners_[a.type].forEach(function(b){b(a)}):console.log(a)};bitjs.archive.Unarchiver.prototype.start=
function(){var a=this,b=this.pathToBitJS_+this.getScriptFileName();b&&(this.worker_=new Worker(b),this.worker_.onerror=function(a){console.log("Worker error: message = "+a.message);throw a;},this.worker_.onmessage=function(b){"string"==typeof b.data?console.log(b.data):a.handleWorkerEvent_(b.data)},this.worker_.postMessage({file:this.ab}))};bitjs.archive.Unzipper=function(a,b){bitjs.base(this,a,b)};bitjs.inherits(bitjs.archive.Unzipper,bitjs.archive.Unarchiver);bitjs.archive.Unzipper.prototype.getScriptFileName=
function(){return"unzip.min.js"};bitjs.archive.Unrarrer=function(a,b){bitjs.base(this,a,b)};bitjs.inherits(bitjs.archive.Unrarrer,bitjs.archive.Unarchiver);bitjs.archive.Unrarrer.prototype.getScriptFileName=function(){return"unrar.js"};bitjs.archive.Untarrer=function(a,b){bitjs.base(this,a,b)};bitjs.inherits(bitjs.archive.Untarrer,bitjs.archive.Unarchiver);bitjs.archive.Untarrer.prototype.getScriptFileName=function(){return"untar.js"}})();

// Generated by CoffeeScript 1.4.0

/*1964js - JavaScript/HTML5 port of 1964 - N64 emulator
Copyright (C) 2012 Joel Middendorf

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/


(function() {

  C1964jsVideoHLE.prototype.getGbi0MoveWordType = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 3] & 0x00ff;
  };

  C1964jsVideoHLE.prototype.getGbi0MoveWordOffset = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 1] << 8 | this.core.memory.rdramUint8Array[pc + 2]) >>> 0;
  };

  C1964jsVideoHLE.prototype.getGbi0MoveWordValue = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >>> 0;
  };

  C1964jsVideoHLE.prototype.getGbi0DlistParam = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 1] & 0x0FF;
  };

  C1964jsVideoHLE.prototype.getGbi0DlistAddr = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >>> 0;
  };

  C1964jsVideoHLE.prototype.getCommand = function(pc) {
    return this.core.memory.rdramUint8Array[pc] & 0x00ff;
  };

  C1964jsVideoHLE.prototype.getGbi0Tri1V2 = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 7];
  };

  C1964jsVideoHLE.prototype.getGbi0Tri1V1 = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 6];
  };

  C1964jsVideoHLE.prototype.getGbi0Tri1V0 = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 5];
  };

  C1964jsVideoHLE.prototype.getGbi0Tri1Flag = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 4];
  };

  C1964jsVideoHLE.prototype.getGbi0NumVertices = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 1] >> 4) & 0x0F;
  };

  C1964jsVideoHLE.prototype.getGbi0Vertex0 = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 1] & 0x0F;
  };

  C1964jsVideoHLE.prototype.getFiddledVertexX = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >> 16;
  };

  C1964jsVideoHLE.prototype.getFiddledVertexY = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) << 16 >> 16;
  };

  C1964jsVideoHLE.prototype.getFiddledVertexZ = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexX = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16) >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexY = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) << 16 >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexZ = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16) >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexS = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 8] << 8 | this.core.memory.rdramUint8Array[pc + 9]) << 16 >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexT = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 10] << 8 | this.core.memory.rdramUint8Array[pc + 11]) << 16 >> 16;
  };

  C1964jsVideoHLE.prototype.getVertexColorR = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 12];
  };

  C1964jsVideoHLE.prototype.getVertexColorG = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 13];
  };

  C1964jsVideoHLE.prototype.getVertexColorB = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 14];
  };

  C1964jsVideoHLE.prototype.getVertexAlpha = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 15];
  };

  C1964jsVideoHLE.prototype.getVertexNormalX = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 12] << 24 | this.core.memory.rdramUint8Array[pc + 13] << 16 | this.core.memory.rdramUint8Array[pc + 14] << 8 | this.core.memory.rdramUint8Array[pc + 15]) >> 24;
  };

  C1964jsVideoHLE.prototype.getVertexNormalY = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 12] << 24 | this.core.memory.rdramUint8Array[pc + 13] << 16 | this.core.memory.rdramUint8Array[pc + 14] << 8 | this.core.memory.rdramUint8Array[pc + 15]) >> 16 & 0xFF;
  };

  C1964jsVideoHLE.prototype.getVertexNormalZ = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 12] << 24 | this.core.memory.rdramUint8Array[pc + 13] << 16 | this.core.memory.rdramUint8Array[pc + 14] << 8 | this.core.memory.rdramUint8Array[pc + 15]) >> 8 & 0xFF;
  };

  C1964jsVideoHLE.prototype.toSByte = function(ub) {
    if (ub > 127) {
      return ub - 256;
    } else {
      return ub;
    }
  };

  C1964jsVideoHLE.prototype.getTextureLevel = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >> 11 & 0x07;
  };

  C1964jsVideoHLE.prototype.getTextureTile = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >> 8 & 0x07;
  };

  C1964jsVideoHLE.prototype.getTextureOn = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) & 0x0F;
  };

  C1964jsVideoHLE.prototype.getTextureScaleS = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 16 & 0xFFFF;
  };

  C1964jsVideoHLE.prototype.getTextureScaleT = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) & 0xFFFF;
  };

  C1964jsVideoHLE.prototype.getCombineA0 = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 1] >> 4) & 0x0F;
  };

  C1964jsVideoHLE.prototype.getCombineB0 = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] >> 4) & 0x0F;
  };

  C1964jsVideoHLE.prototype.getCombineC0 = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc + 1] << 1) & 0x1E) | ((this.core.memory.rdramUint8Array[pc + 2] & 0x80) >>> 7);
  };

  C1964jsVideoHLE.prototype.getCombineD0 = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc + 5] << 1) & 0x6) | ((this.core.memory.rdramUint8Array[pc + 6] & 0x80) >>> 7);
  };

  C1964jsVideoHLE.prototype.getCombineA0a = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >> 12) & 0x07;
  };

  C1964jsVideoHLE.prototype.getCombineB0a = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 12) & 0x07;
  };

  C1964jsVideoHLE.prototype.getCombineC0a = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >> 9) & 0x07;
  };

  C1964jsVideoHLE.prototype.getCombineD0a = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 9) & 0x07;
  };

  C1964jsVideoHLE.prototype.getCombineA1 = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >> 5) & 0x0F;
  };

  C1964jsVideoHLE.prototype.getCombineB1 = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 24) & 0x0F;
  };

  C1964jsVideoHLE.prototype.getCombineC1 = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) & 0x1F;
  };

  C1964jsVideoHLE.prototype.getCombineD1 = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 6) & 0x07;
  };

  C1964jsVideoHLE.prototype.getCombineA1a = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 21) & 0x07;
  };

  C1964jsVideoHLE.prototype.getCombineB1a = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 3) & 0x07;
  };

  C1964jsVideoHLE.prototype.getCombineC1a = function(pc) {
    return ((this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 18) & 0x07;
  };

  C1964jsVideoHLE.prototype.getCombineD1a = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) & 0x07;
  };

  C1964jsVideoHLE.prototype.gbi0isProjectionMatrix = function(pc) {
    if ((this.core.memory.rdramUint8Array[pc + 1] & 0x00000001) !== 0) {
      return true;
    } else {
      return false;
    }
  };

  C1964jsVideoHLE.prototype.gbi0LoadMatrix = function(pc) {
    if ((this.core.memory.rdramUint8Array[pc + 1] & 0x00000002) !== 0) {
      return true;
    } else {
      return false;
    }
  };

  C1964jsVideoHLE.prototype.gbi0PushMatrix = function(pc) {
    if ((this.core.memory.rdramUint8Array[pc + 1] & 0x00000004) !== 0) {
      return true;
    } else {
      return false;
    }
  };

  C1964jsVideoHLE.prototype.getTexRectXh = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >>> 12 & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getTexRectYh = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getTexRectTileNo = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >>> 24 & 0x07;
  };

  C1964jsVideoHLE.prototype.getTexRectXl = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >>> 12 & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getTexRectYl = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getTexRectS = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 12] << 24 | this.core.memory.rdramUint8Array[pc + 13] << 16 | this.core.memory.rdramUint8Array[pc + 14] << 8 | this.core.memory.rdramUint8Array[pc + 15]) >>> 16 & 0xFFFF;
  };

  C1964jsVideoHLE.prototype.getTexRectT = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 12] << 24 | this.core.memory.rdramUint8Array[pc + 13] << 16 | this.core.memory.rdramUint8Array[pc + 14] << 8 | this.core.memory.rdramUint8Array[pc + 15]) & 0xFFFF;
  };

  C1964jsVideoHLE.prototype.getTexRectDsDx = function(pc) {
    return this.core.memory.getInt32(this.core.memory.rdramUint8Array, pc + 20) >>> 16 & 0xFFFF;
  };

  C1964jsVideoHLE.prototype.getTexRectDtDy = function(pc) {
    return this.core.memory.getInt32(this.core.memory.rdramUint8Array, pc + 20) & 0xFFFF;
  };

  C1964jsVideoHLE.prototype.getGbi1Type = function(pc) {};

  C1964jsVideoHLE.prototype.getGbi1Length = function(pc) {};

  C1964jsVideoHLE.prototype.getGbi1RspSegmentAddr = function(pc) {};

  C1964jsVideoHLE.prototype.getRspSegmentAddr = function(seg) {
    return this.segments[seg >> 24 & 0x0F] + (seg & 0x00FFFFFF);
  };

  C1964jsVideoHLE.prototype.getOtherModeL = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) & 0x00FF;
  };

  C1964jsVideoHLE.prototype.getOtherModeH = function(pc) {
    return this.core.memory.getInt32(this.core.memory.rdramUint8Array, pc + 4) & 0x00FF;
  };

  C1964jsVideoHLE.prototype.getTImgWidth = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getTImgSize = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >>> 19 & 3;
  };

  C1964jsVideoHLE.prototype.getTImgFormat = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >>> 21 & 0x7;
  };

  C1964jsVideoHLE.prototype.getTImgAddr = function(pc) {
    var tImgAddr;
    tImgAddr = this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7];
    return this.getRspSegmentAddr(tImgAddr);
  };

  C1964jsVideoHLE.prototype.getSetTileFmt = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >> 21 & 0x07;
  };

  C1964jsVideoHLE.prototype.getSetTileSiz = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >> 19 & 0x03;
  };

  C1964jsVideoHLE.prototype.getSetTileLine = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >> 9 & 0x01FF;
  };

  C1964jsVideoHLE.prototype.getSetTileTmem = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) & 0x01FF;
  };

  C1964jsVideoHLE.prototype.getSetTileTile = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 24 & 0x07;
  };

  C1964jsVideoHLE.prototype.getSetTilePal = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 20 & 0x0F;
  };

  C1964jsVideoHLE.prototype.getSetTileCmt = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 18 & 0x03;
  };

  C1964jsVideoHLE.prototype.getSetTileMaskt = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 14 & 0x0F;
  };

  C1964jsVideoHLE.prototype.getSetTileShiftt = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 10 & 0x0F;
  };

  C1964jsVideoHLE.prototype.getSetTileCms = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 8 & 0x03;
  };

  C1964jsVideoHLE.prototype.getSetTileMasks = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 4 & 0x0F;
  };

  C1964jsVideoHLE.prototype.getSetTileShifts = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) & 0x0F;
  };

  C1964jsVideoHLE.prototype.getLoadBlockTile = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 24 & 0x07;
  };

  C1964jsVideoHLE.prototype.getLoadBlockUls = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >> 12 & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getLoadBlockUlt = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getLoadBlockLrs = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 12 & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getLoadBlockDxt = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getSetTileSizeTile = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 24 & 0x07;
  };

  C1964jsVideoHLE.prototype.getSetTileSizeUls = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >> 12 & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getSetTileSizeUlt = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getSetTileSizeLrs = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >> 12 & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getSetTileSizeLrt = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) & 0x0FFF;
  };

  C1964jsVideoHLE.prototype.getSetPrimColorM = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) >>> 8 & 0xFF;
  };

  C1964jsVideoHLE.prototype.getSetPrimColorL = function(pc) {
    return (this.core.memory.rdramUint8Array[pc] << 24 | this.core.memory.rdramUint8Array[pc + 1] << 16 | this.core.memory.rdramUint8Array[pc + 2] << 8 | this.core.memory.rdramUint8Array[pc + 3]) & 0x000000FF;
  };

  C1964jsVideoHLE.prototype.getSetPrimColorR = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetPrimColorG = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) << 8 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetPrimColorB = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) << 16 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetPrimColorA = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) << 24 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetGeometryMode = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7];
  };

  C1964jsVideoHLE.prototype.getClearGeometryMode = function(pc) {
    return this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7];
  };

  C1964jsVideoHLE.prototype.pow2roundup = function(value) {
    var result;
    result = 1;
    while (result < value) {
      result <<= 1;
    }
    return result;
  };

  C1964jsVideoHLE.prototype.getSetFillColorR = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetFillColorG = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) << 8 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetFillColorB = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) << 16 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetFillColorA = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) << 24 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetEnvColorR = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetEnvColorG = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) << 8 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetEnvColorB = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) << 16 >>> 24;
  };

  C1964jsVideoHLE.prototype.getSetEnvColorA = function(pc) {
    return (this.core.memory.rdramUint8Array[pc + 4] << 24 | this.core.memory.rdramUint8Array[pc + 5] << 16 | this.core.memory.rdramUint8Array[pc + 6] << 8 | this.core.memory.rdramUint8Array[pc + 7]) << 24 >>> 24;
  };

  C1964jsVideoHLE.prototype.microcodeMap0 = ['RSP_GBI1_SpNoop', 'RSP_GBI0_Mtx', 'RSP_GBI1_Reserved', 'RSP_GBI1_MoveMem', 'RSP_GBI0_Vtx', 'RSP_GBI1_Reserved', 'RSP_GBI0_DL', 'RSP_GBI1_Reserved', 'RSP_GBI1_Reserved', 'RSP_GBI0_Sprite2DBase', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_GBI0_Tri4', 'RSP_GBI1_RDPHalf_Cont', 'RSP_GBI1_RDPHalf_2', 'RSP_GBI1_RDPHalf_1', 'RSP_GBI1_Line3D', 'RSP_GBI1_ClearGeometryMode', 'RSP_GBI1_SetGeometryMode', 'RSP_GBI1_EndDL', 'RSP_GBI1_SetOtherModeL', 'RSP_GBI1_SetOtherModeH', 'RSP_GBI1_Texture', 'RSP_GBI1_MoveWord', 'RSP_GBI1_PopMtx', 'RSP_GBI1_CullDL', 'RSP_GBI1_Tri1', 'RSP_GBI1_Noop', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RDP_TriFill', 'RDP_TriFillZ', 'RDP_TriTxtr', 'RDP_TriTxtrZ', 'RDP_TriShade', 'RDP_TriShadeZ', 'RDP_TriShadeTxtr', 'RDP_TriShadeTxtrZ', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'RSP_RDP_Nothing', 'DLParser_TexRect', 'DLParser_TexRectFlip', 'DLParser_RDPLoadSynch', 'DLParser_RDPPipeSynch', 'DLParser_RDPTileSynch', 'DLParser_RDPFullSynch', 'DLParser_SetKeyGB', 'DLParser_SetKeyR', 'DLParser_SetConvert', 'DLParser_SetScissor', 'DLParser_SetPrimDepth', 'DLParser_RDPSetOtherMode', 'DLParser_LoadTLut', 'RSP_RDP_Nothing', 'DLParser_SetTileSize', 'DLParser_LoadBlock', 'DLParser_LoadTile', 'DLParser_SetTile', 'DLParser_FillRect', 'DLParser_SetFillColor', 'DLParser_SetFogColor', 'DLParser_SetBlendColor', 'DLParser_SetPrimColor', 'DLParser_SetEnvColor', 'DLParser_SetCombine', 'DLParser_SetTImg', 'DLParser_SetZImg', 'DLParser_SetCImg'];

}).call(this);

// Generated by CoffeeScript 1.4.0
(function() {
  var C1964jsAudio, root;

  C1964jsAudio = (function() {
    var audioBuffer, audioContext;

    audioContext = void 0;

    audioBuffer = void 0;

    function C1964jsAudio() {}

    C1964jsAudio.prototype.processAudio = function(memory, from, length) {
      var PI_2_400, i, k, left, right, source;
      return;
      try {
        if (audioContext === "unsupported") {
          return;
        }
        if (audioContext === undefined) {
          audioContext = new webkitAudioContext();
        }
      } catch (error) {
        audioContext = "unsupported";
        return false;
      }
      PI_2_400 = 1.0 / (Math.PI * 2 * 400);
      source = audioContext.createBufferSource();
      if (length < 4) {
        return;
      }
      if (audioBuffer === undefined) {
        audioBuffer = audioContext.createBuffer(2, length / 2 / 2, 44100);
      }
      left = audioBuffer.getChannelData(0);
      right = audioBuffer.getChannelData(1);
      i = from;
      k = 0;
      while (k < length) {
        left[k] = ((memory.rdramUint8Array[i] << 8 | memory.rdramUint8Array[i + 1]) << 16 >> 16) * PI_2_400;
        right[k] = ((memory.rdramUint8Array[i + 2] << 8 | memory.rdramUint8Array[i + 3]) << 16 >> 16) * PI_2_400;
        i += 4;
        k++;
      }
      source.buffer = audioBuffer;
      this.startTime += audioBuffer.duration;
      source.connect(audioContext.destination);
      source.loop = false;
      source.noteOn(this.startTime);
      return true;
    };

    return C1964jsAudio;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.C1964jsAudio = C1964jsAudio;

}).call(this);

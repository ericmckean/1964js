// Generated by CoffeeScript 1.4.0

/*1964js - JavaScript/HTML5 port of 1964 - N64 emulator
Copyright (C) 2012 Joel Middendorf

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/


/*jslint bitwise: true, evil: true, undef: false, todo: true, browser: true, devel: true
*/


/*globals Int32Array, ArrayBuffer, Float32Array, C1964jsMemory, C1964jsInterrupts, C1964jsConstants, C1964jsPif, C1964jsDMA, Float64Array, C1964jsWebGL, cancelAnimFrame, C1964jsHelpers, dec2hex, Uint8Array, Uint16Array, requestAnimFrame
*/


(function() {
  "use strict";

  var C1964jsEmulator, consts, offset, root;

  consts = new C1964jsConstants();

  offset = void 0;

  C1964jsEmulator = (function() {

    C1964jsEmulator.prototype.callBind = function(fn, me) {
      return function() {
        return fn.call(me);
      };
    };

    function C1964jsEmulator(userSettings) {
      var i;
      i = void 0;
      this.settings = userSettings;
      this.request = undefined;
      this.debug = false;
      this.writeToDom = true;
      if (this.writeToDom === true) {
        this.code = window;
      } else {
        this.code = {};
      }
      this.vAddr = new Int32Array(1);
      this.cp0 = new Int32Array(32);
      this.cp1Buffer = new ArrayBuffer(32 * 4);
      this.cp1_i = new Int32Array(this.cp1Buffer);
      this.cp1_f = new Float32Array(this.cp1Buffer);
      this.cp1_f64 = new Float64Array(this.cp1Buffer);
      this.cp1Con = new Int32Array(32);
      this.LLbit = 0;
      this.terminate = false;
      this.NUM_CHANNELS = 1;
      this.NUM_SAMPLES = 40000;
      this.SAMPLE_RATE = 40000;
      this.isLittleEndian = 0;
      this.isBigEndian = 0;
      this.interval = 0;
      this.m = -125000;
      this.forceRepaint = false;
      this.doOnce = 0;
      this.kk = 0;
      this.TV_SYSTEM_NTSC = 1;
      this.TV_SYSTEM_PAL = 0;
      this.currentHack = 0;
      this.kfi = 3200000;
      this.cnt = 0;
      this.r = new Int32Array([0, 0, 0xd1731be9, 0xd1731be9, 0x001be9, 0xf45231e5, 0xa4001f0c, 0xa4001f08, 0x070, 0, 0x040, 0xA4000040, 0xd1330bc3, 0xd1330bc3, 0x025613a26, 0x02ea04317, 0, 0, 0, 0, 0, 0, 0, 0x06, 0, 0xd73f2993, 0, 0, 0, 0xa4001ff0, 0, 0xa4001554, 0, 0, 0]);
      this.h = new Int32Array(35);
      this.memory = new C1964jsMemory(this);
      this.interrupts = new C1964jsInterrupts(this, this.cp0);
      this.pif = new C1964jsPif(this.memory.pifUint8Array);
      this.dma = new C1964jsDMA(this.memory, this.interrupts, this.pif);
      this.webGL = new C1964jsWebGL(this, userSettings.wireframe);
      this.log = function(message) {
        return console.log(message);
      };
    }

    C1964jsEmulator.prototype.init = function(buffer) {
      var i, k, x, y;
      k = void 0;
      x = void 0;
      i = void 0;
      y = void 0;
      this.endianTest();
      this.helpers = new C1964jsHelpers(this, this.isLittleEndian);
      this.initTLB();
      cancelAnimFrame(this.request);
      this.currentHack = 0;
      this.dma.startTime = 0;
      this.kfi = 512;
      this.doOnce = 0;
      this.interval = 0;
      this.m = -125000;
      this.flushDynaCache();
      this.showFB = true;
      this.webGL.hide3D();
      this.memory.rom = buffer;
      this.memory.romUint8Array = buffer;
      this.docElement = document.getElementById("screen");
      this.errorElement = document.getElementById("error");
      this.c = document.getElementById("Canvas");
      this.ctx = this.c.getContext("2d");
      this.ImDat = this.ctx.createImageData(320, 240);
      i = 3;
      y = 0;
      while (y < 240) {
        x = 0;
        while (x < 320) {
          this.ImDat.data[i] = 255;
          i += 4;
          x += 1;
        }
        y += 1;
      }
      this.stopCompiling = false;
      this.byteSwap(this.memory.rom);
      k = 0;
      while (k < 0x1000) {
        this.memory.spMemUint8Array[k] = this.memory.rom[k];
        k += 1;
      }
      this.r[20] = this.getTVSystem(this.memory.romUint8Array[0x3D]);
      this.r[22] = this.getCIC();
      this.cp0[consts.STATUS] = 0x70400004;
      this.cp0[consts.RANDOM] = 0x0000001f;
      this.cp0[consts.CONFIG] = 0x0006e463;
      this.cp0[consts.PREVID] = 0x00000b00;
      this.cp1Con[0] = 0x00000511;
      this.p = 0xA4000040;
      this.memory.setInt32(this.memory.miUint8Array, consts.MI_VERSION_REG, 0x01010101);
      this.memory.setInt32(this.memory.riUint8Array, consts.RI_CONFIG_REG, 0x00000001);
      this.memory.setInt32(this.memory.viUint8Array, consts.VI_INTR_REG, 0x000003FF);
      this.memory.setInt32(this.memory.viUint8Array, consts.VI_V_SYNC_REG, 0x000000D1);
      this.memory.setInt32(this.memory.viUint8Array, consts.VI_H_SYNC_REG, 0x000D2047);
      i = 0;
      while (i < 35) {
        this.h[i] = this.r[i] >> 31;
        i += 1;
      }
      this.startEmulator();
    };

    C1964jsEmulator.prototype.byteSwap = function(rom) {
      var fmt, k, temp;
      k = void 0;
      fmt = void 0;
      temp = void 0;
      console.log("byte swapping...");
      fmt = this.memory.getUint32(rom, 0);
      switch (fmt >>> 0) {
        case 0x37804012:
          if ((rom.byteLength % 2) !== 0) {
            alert("help: support odd byte lengths for this swap");
          }
          k = 0;
          while (k < rom.byteLength) {
            temp = rom[k];
            rom[k] = rom[k + 1];
            rom[k + 1] = temp;
            k += 2;
          }
          break;
        case 0x80371240:
          break;
        default:
          this.log("Unhandled byte order: 0x" + dec2hex(fmt));
      }
      console.log("swap done");
    };

    C1964jsEmulator.prototype.endianTest = function() {
      var ii, iiSetView, iiView;
      ii = new ArrayBuffer(2);
      iiSetView = new Uint8Array(ii);
      iiView = new Uint16Array(ii);
      iiSetView[0] = 0xff;
      iiSetView[1] = 0x11;
      if (iiView[0] === 0x11FF) {
        this.log("You are on a little-endian system");
        this.isLittleEndian = 1;
        this.isBigEndian = 0;
      } else {
        this.log("You are on a big-endian system");
        this.isLittleEndian = 0;
        this.isBigEndian = 1;
      }
    };

    C1964jsEmulator.prototype.repaint = function(ctx, ImDat) {
      var hi, i, k, lo, out, y;
      out = void 0;
      i = 0;
      y = void 0;
      hi = void 0;
      lo = void 0;
      if (!this.showFB) {
        return;
      }
      k = this.memory.getInt32(this.memory.viUint8Array, consts.VI_ORIGIN_REG) & 0x00FFFFFF;
      out = ImDat.data;
      y = -240 * 320;
      while (y !== 0) {
        hi = this.memory.rdramUint8Array[k];
        lo = this.memory.rdramUint8Array[k + 1];
        out[i] = hi & 0xF8;
        out[i + 1] = ((hi << 5) | (lo >>> 3)) & 0xF8;
        out[i + 2] = lo << 2 & 0xF8;
        hi = this.memory.rdramUint8Array[k + 2];
        lo = this.memory.rdramUint8Array[k + 3];
        out[i + 4] = hi & 0xF8;
        out[i + 5] = ((hi << 5) | (lo >>> 3)) & 0xF8;
        out[i + 6] = lo << 2 & 0xF8;
        k += 4;
        i += 8;
        y += 2;
      }
      ctx.putImageData(ImDat, 0, 0);
    };

    C1964jsEmulator.prototype.initTLB = function() {
      var dTLBIndex, i, iTLBIndex, lastDTLBIndex, lastITLBIndex;
      this.tlb = new Array(32);
      i = 0;
      while (i < 32) {
        this.tlb[i] = {
          valid: false,
          entryHi: new Int32Array(1),
          entryLo1: new Int32Array(1),
          entryLo0: new Int32Array(1),
          pageMask: new Int32Array(1),
          loCompare: new Int32Array(1),
          myHiMask: new Int32Array(1)
        };
        i += 1;
      }
      iTLBIndex = [0, 0];
      dTLBIndex = [0, 0, 0];
      lastITLBIndex = 0;
      lastDTLBIndex = 0;
      this.memory.initPhysRegions();
    };

    C1964jsEmulator.prototype.runLoop = function() {
      var _this = this;
      this.mySetInterval = setInterval((function() {
        var fn, fnName, pc, rate;
        if (_this.terminate === true) {
          clearInterval(_this.mySetInterval);
          return;
        }
        _this.interrupts.checkInterrupts();
        while (1) {
          if (_this.m >= 0) {
            _this.interval += 1;
            _this.m = -62500;
            if (_this.interval === 4) {
              _this.interval = 0;
              _this.repaintWrapper();
              _this.cp0[consts.COUNT] += 625000;
              _this.interrupts.triggerCompareInterrupt(0, false);
              _this.interrupts.triggerVIInterrupt(0, false);
              _this.interrupts.processException(_this.p);
              if (document.getElementById("speedlimit").checked === true) {
                rate = 15;
                if (_this.settings.speedLimitMs === rate) {
                  return;
                }
                _this.settings.speedLimitMs = rate;
                clearInterval(_this.mySetInterval);
                _this.runLoop();
              } else {
                if (_this.settings.speedLimitMs === 0) {
                  return;
                }
                _this.settings.speedLimitMs = 0;
                clearInterval(_this.mySetInterval);
                _this.runLoop();
              }
              break;
            }
          } else {
            _this.interrupts.processException(_this.p);
            pc = _this.p >>> 2;
            fnName = "_" + pc;
            try {
              fn = _this.code[fnName];
              _this.run(fn, _this.r, _this.h);
            } catch (e) {
              fn = _this.decompileBlock(_this.p);
              fn = fn(_this.r, _this.h, _this.memory, _this);
            }
          }
        }
      }), this.settings.speedLimitMs);
      return this;
    };

    C1964jsEmulator.prototype.run = function(fn, r, h) {
      while (this.m < 0) {
        fn = fn(r, h, this.memory, this);
      }
    };

    C1964jsEmulator.prototype.repaintWrapper = function() {
      this.repaint(this.ctx, this.ImDat);
    };

    C1964jsEmulator.prototype.startEmulator = function() {
      this.terminate = false;
      this.log("startEmulator");
      this.runLoop();
    };

    C1964jsEmulator.prototype.stopEmulatorAndCleanup = function() {
      this.stopCompiling = true;
      this.terminate = true;
      this.log("stopEmulatorAndCleanup");
      this.flushDynaCache();
    };

    C1964jsEmulator.prototype.getFnName = function(pc) {
      return "_" + (pc >>> 2);
    };

    C1964jsEmulator.prototype.decompileBlock = function(pc) {
      var fnName, g, instruction, s, string;
      offset = 0;
      g = void 0;
      s = void 0;
      this.cnt = 0;
      instruction = void 0;
      string = void 0;
      fnName = "_" + (pc >>> 2);
      if (this.writeToDom === true) {
        string = "function " + fnName + "(r, h, m, t){";
      } else {
        string = "i1964js.code." + fnName + "=function(r, h, m, t){";
      }
      while (!this.stopCompiling) {
        instruction = this.memory.lw(pc + offset);
        string += this[this.CPU_instruction[instruction >> 26 & 0x3f]](instruction);
        this.cnt += 1;
        offset += 4;
        if (offset > 10000) {
          throw Error("too many instructions! bailing.");
        }
      }
      this.stopCompiling = false;
      string += "t.m+=" + this.cnt + ";";
      string += "t.p=" + ((pc + offset) >> 0);
      string += ";return t.code." + this.getFnName((pc + offset) >> 0) + "}";
      if (this.writeToDom === true) {
        g = document.createElement("script");
        s = document.getElementsByTagName("script")[this.kk];
        this.kk += 1;
        s.parentNode.insertBefore(g, s);
        g.text = string;
      } else {
        wrapEval(string);
      }
      return this.code[fnName];
    };

    C1964jsEmulator.prototype.wrapEval = function(string) {
      return eval(string);
    };

    C1964jsEmulator.prototype.r4300i_add = function(i) {
      return this.helpers.sLogic(i, "+");
    };

    C1964jsEmulator.prototype.r4300i_addu = function(i) {
      return this.helpers.sLogic(i, "+");
    };

    C1964jsEmulator.prototype.r4300i_sub = function(i) {
      return this.helpers.sLogic(i, "-");
    };

    C1964jsEmulator.prototype.r4300i_subu = function(i) {
      return this.helpers.sLogic(i, "-");
    };

    C1964jsEmulator.prototype.r4300i_or = function(i) {
      return this.helpers.dLogic(i, "|");
    };

    C1964jsEmulator.prototype.r4300i_xor = function(i) {
      return this.helpers.dLogic(i, "^");
    };

    C1964jsEmulator.prototype.r4300i_nor = function(i) {
      return this.helpers.tRD(i) + "=~(" + this.helpers.RS(i) + "|" + this.helpers.RT(i) + ")," + this.helpers.tRDH(i) + "=~(" + this.helpers.RSH(i) + "|" + this.helpers.RTH(i) + ");";
    };

    C1964jsEmulator.prototype.r4300i_and = function(i) {
      return this.helpers.dLogic(i, "&");
    };

    C1964jsEmulator.prototype.r4300i_lui = function(i) {
      var temp;
      temp = (i & 0x0000ffff) << 16;
      return this.helpers.tRTH(i) + "=(" + this.helpers.tRT(i) + "=" + temp + ")>>31;";
    };

    C1964jsEmulator.prototype.r4300i_lw = function(i) {
      return this.helpers.tRTH(i) + "=(" + this.helpers.tRT(i) + "=m.lw(" + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i) + "))>>31;";
    };

    C1964jsEmulator.prototype.r4300i_lwu = function(i) {
      return this.helpers.tRTH(i) + "=0," + this.helpers.tRT(i) + "=m.lw(" + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i) + ");";
    };

    C1964jsEmulator.prototype.r4300i_sw = function(i, isDelaySlot) {
      var a, string;
      a = void 0;
      string = "m.sw(" + this.helpers.RT(i) + "," + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i);
      if (isDelaySlot === true) {
        a = (this.p + offset + 4) | 0;
        string += ", " + a + ", true);";
      } else {
        a = (this.p + offset) | 0;
        string += ", " + a + ");";
      }
      return string;
    };

    C1964jsEmulator.prototype.delaySlot = function(i, likely) {
      var c, instruction, opcode, pc, string;
      pc = void 0;
      instruction = void 0;
      opcode = void 0;
      string = void 0;
      pc = (this.p + offset + 4 + (this.helpers.soffset_imm(i) << 2)) | 0;
      instruction = this.memory.lw((this.p + offset + 4) | 0);
      opcode = this[this.CPU_instruction[instruction >> 26 & 0x3f]](instruction, true);
      c = this.cnt + 1;
      string = opcode + "t.m+=" + c + ";t.p=" + pc + ";return t.code." + this.getFnName(pc) + "}";
      if (likely === false) {
        string += opcode + "t.m++;";
      }
      offset += 4;
      return string;
    };

    C1964jsEmulator.prototype.r4300i_bne = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RS(i) + "!==" + this.helpers.RT(i) + "||" + this.helpers.RSH(i) + "!==" + this.helpers.RTH(i) + "){" + this.delaySlot(i, false);
    };

    C1964jsEmulator.prototype.r4300i_beq = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RS(i) + "===" + this.helpers.RT(i) + "&&" + this.helpers.RSH(i) + "===" + this.helpers.RTH(i) + "){" + this.delaySlot(i, false);
    };

    C1964jsEmulator.prototype.r4300i_bnel = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RS(i) + "!==" + this.helpers.RT(i) + "||" + this.helpers.RSH(i) + "!==" + this.helpers.RTH(i) + "){" + this.delaySlot(i, true);
    };

    C1964jsEmulator.prototype.r4300i_blez = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RSH(i) + "<0||(" + this.helpers.RSH(i) + "===0&&" + this.helpers.RS(i) + "===0)){" + this.delaySlot(i, false);
    };

    C1964jsEmulator.prototype.r4300i_blezl = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RSH(i) + "<0||(" + this.helpers.RSH(i) + "===0&&" + this.helpers.RS(i) + "===0)){" + this.delaySlot(i, true);
    };

    C1964jsEmulator.prototype.r4300i_bgez = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RSH(i) + ">=0){" + this.delaySlot(i, false);
    };

    C1964jsEmulator.prototype.r4300i_bgezl = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RSH(i) + ">=0){" + this.delaySlot(i, true);
    };

    C1964jsEmulator.prototype.r4300i_bgtzl = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RSH(i) + ">0||(" + this.helpers.RSH(i) + "===0&&" + this.helpers.RS(i) + "!==0)){" + this.delaySlot(i, true);
    };

    C1964jsEmulator.prototype.r4300i_bltzl = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RSH(i) + "<0){" + this.delaySlot(i, true);
    };

    C1964jsEmulator.prototype.r4300i_bgezal = function(i) {
      var link;
      this.stopCompiling = true;
      link = (this.p + offset + 8) >> 0;
      return "if(" + this.helpers.RSH(i) + ">=0){" + "r[31]=" + link + ";" + "h[31]=" + (link >> 31) + ";" + this.delaySlot(i, false);
    };

    C1964jsEmulator.prototype.r4300i_bgezall = function(i) {
      var link;
      this.stopCompiling = true;
      link = (this.p + offset + 8) >> 0;
      return "if(" + this.helpers.RSH(i) + ">=0){" + "r[31]=" + link + ";" + "h[31]=" + (link >> 31) + ";" + this.delaySlot(i, true);
    };

    C1964jsEmulator.prototype.r4300i_bltz = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RSH(i) + "<0){" + this.delaySlot(i, false);
    };

    C1964jsEmulator.prototype.r4300i_bgtz = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RSH(i) + ">0||(" + this.helpers.RSH(i) + "===0&&" + this.helpers.RS(i) + "!==0)){" + this.delaySlot(i, false);
    };

    C1964jsEmulator.prototype.r4300i_beql = function(i) {
      this.stopCompiling = true;
      return "if(" + this.helpers.RS(i) + "===" + this.helpers.RT(i) + "&&" + this.helpers.RSH(i) + "===" + this.helpers.RTH(i) + "){" + this.delaySlot(i, true);
    };

    C1964jsEmulator.prototype.r4300i_COP1_bc1f = function(i) {
      this.stopCompiling = true;
      return "if((t.cp1Con[31]&0x00800000)===0){" + this.delaySlot(i, false);
    };

    C1964jsEmulator.prototype.r4300i_COP1_bc1t = function(i) {
      this.stopCompiling = true;
      return "if((t.cp1Con[31]&0x00800000)!==0){" + this.delaySlot(i, false);
    };

    C1964jsEmulator.prototype.r4300i_COP1_bc1tl = function(i) {
      this.stopCompiling = true;
      return "if((t.cp1Con[31]&0x00800000)!==0){" + this.delaySlot(i, true);
    };

    C1964jsEmulator.prototype.r4300i_COP1_bc1fl = function(i) {
      this.stopCompiling = true;
      return "if((t.cp1Con[31]&0x00800000)===0){" + this.delaySlot(i, true);
    };

    C1964jsEmulator.prototype.r4300i_j = function(i) {
      var instr_index, instruction, string;
      this.stopCompiling = true;
      instruction = void 0;
      string = "{";
      instr_index = (((this.p + offset + 4) & 0xF0000000) | ((i & 0x03FFFFFF) << 2)) | 0;
      instruction = this.memory.lw((this.p + offset + 4) | 0);
      if (((instr_index >> 0) === (this.p + offset) >> 0) && (instruction === 0)) {
        string += "t.m=0;";
      } else {
        string += "t.m+=1;";
      }
      string += this[this.CPU_instruction[instruction >> 26 & 0x3f]](instruction, true);
      return string += "t.p=" + instr_index + ";return t.code." + this.getFnName(instr_index) + "}";
    };

    C1964jsEmulator.prototype.r4300i_jal = function(i) {
      var instr_index, instruction, pc, string;
      this.stopCompiling = true;
      pc = void 0;
      instruction = void 0;
      string = "{";
      instr_index = (((this.p + offset + 4) & 0xF0000000) | ((i & 0x03FFFFFF) << 2)) | 0;
      instruction = this.memory.lw((this.p + offset + 4) | 0);
      string += this[this.CPU_instruction[instruction >> 26 & 0x3f]](instruction, true);
      pc = (this.p + offset + 8) | 0;
      string += "t.m+=1;";
      return string += "t.p=" + instr_index + ";r[31]=" + pc + ";h[31]=" + (pc >> 31) + ";return t.code." + this.getFnName(instr_index) + "}";
    };

    C1964jsEmulator.prototype.r4300i_jalr = function(i) {
      var instruction, link, opcode, string;
      this.stopCompiling = true;
      instruction = void 0;
      opcode = void 0;
      link = void 0;
      string = "{var temp=" + this.helpers.RS(i) + ";";
      link = (this.p + offset + 8) >> 0;
      string += this.helpers.tRD(i) + "=" + link + ";" + this.helpers.tRDH(i) + "=" + (link >> 31) + ";";
      instruction = this.memory.lw((this.p + offset + 4) | 0);
      opcode = this[this.CPU_instruction[instruction >> 26 & 0x3f]](instruction, true);
      string += opcode;
      string += "t.m+=1;";
      string += "t.p=temp;return t.code[\"_\"+(temp>>>2)]}";
      return string;
    };

    C1964jsEmulator.prototype.r4300i_jr = function(i) {
      var instruction, opcode, string;
      this.stopCompiling = true;
      instruction = void 0;
      opcode = void 0;
      string = "{var temp=" + this.helpers.RS(i) + ";";
      instruction = this.memory.lw((this.p + offset + 4) | 0);
      opcode = this[this.CPU_instruction[instruction >> 26 & 0x3f]](instruction, true);
      string += opcode;
      string += "t.m+=1;";
      return string += "t.p=temp;return t.code[\"_\"+(temp>>>2)]}";
    };

    C1964jsEmulator.prototype.UNUSED = function(i) {
      this.log("warning: UNUSED");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_COP0_eret = function(i) {
      var string;
      this.stopCompiling = true;
      string = "{if((t.cp0[" + consts.STATUS + "]&" + consts.ERL + ")!==0){alert(\"error epc\");t.p=t.cp0[" + consts.ERROREPC + "];";
      string += "t.cp0[" + consts.STATUS + "]&=~" + consts.ERL + "}else{t.p=t.cp0[" + consts.EPC + "];t.cp0[" + consts.STATUS + "]&=~" + consts.EXL + "}";
      return string += "t.LLbit=0;return t.code[\"_\"+(t.p>>>2)]}";
    };

    C1964jsEmulator.prototype.r4300i_COP0_mtc0 = function(i, isDelaySlot) {
      var delaySlot, lpc;
      delaySlot = void 0;
      lpc = void 0;
      if (isDelaySlot === true) {
        lpc = (this.p + offset + 4) | 0;
        delaySlot = "true";
      } else {
        lpc = (this.p + offset) | 0;
        delaySlot = "false";
      }
      return "t.helpers.inter_mtc0(r," + this.helpers.fs(i) + "," + this.helpers.rt(i) + "," + delaySlot + "," + lpc + ",t.cp0,t.interrupts);";
    };

    C1964jsEmulator.prototype.r4300i_sll = function(i) {
      if ((i & 0x001FFFFF) === 0) {
        return "";
      }
      return this.helpers.tRDH(i) + "=(" + this.helpers.tRD(i) + "=" + this.helpers.RT(i) + "<<" + this.helpers.sa(i) + ")>>31;";
    };

    C1964jsEmulator.prototype.r4300i_srl = function(i) {
      return this.helpers.tRDH(i) + "=(" + this.helpers.tRD(i) + "=" + this.helpers.RT(i) + ">>>" + this.helpers.sa(i) + ")>>31;";
    };

    C1964jsEmulator.prototype.r4300i_ori = function(i) {
      return this.helpers.tRT(i) + "=" + this.helpers.RS(i) + "|" + this.helpers.offset_imm(i) + "," + this.helpers.tRTH(i) + "=" + this.helpers.RSH(i) + ";";
    };

    C1964jsEmulator.prototype.r4300i_xori = function(i) {
      return this.helpers.tRT(i) + "=" + this.helpers.RS(i) + "^" + this.helpers.offset_imm(i) + "," + this.helpers.tRTH(i) + "=" + this.helpers.RSH(i) + "^0;";
    };

    C1964jsEmulator.prototype.r4300i_andi = function(i) {
      return this.helpers.tRTH(i) + "=0," + this.helpers.tRT(i) + "=" + this.helpers.RS(i) + "&" + this.helpers.offset_imm(i) + ";";
    };

    C1964jsEmulator.prototype.r4300i_addi = function(i) {
      return this.helpers.tRTH(i) + "=(" + this.helpers.tRT(i) + "=" + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i) + ")>>31;";
    };

    C1964jsEmulator.prototype.r4300i_addiu = function(i) {
      return this.helpers.tRTH(i) + "=(" + this.helpers.tRT(i) + "=" + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i) + ")>>31;";
    };

    C1964jsEmulator.prototype.r4300i_slt = function(i) {
      return "{if(" + this.helpers.RSH(i) + ">" + this.helpers.RTH(i) + ")" + this.helpers.tRD(i) + "=0;" + "else if(" + this.helpers.RSH(i) + "<" + this.helpers.RTH(i) + ")" + this.helpers.tRD(i) + "=1;" + "else if(" + this.helpers.uRS(i) + "<" + this.helpers.uRT(i) + ")" + this.helpers.tRD(i) + "=1;" + "else " + this.helpers.tRD(i) + "=0;" + this.helpers.tRDH(i) + "=0}";
    };

    C1964jsEmulator.prototype.r4300i_sltu = function(i) {
      return "{if(" + this.helpers.uRSH(i) + ">" + this.helpers.uRTH(i) + ")" + this.helpers.tRD(i) + "=0;" + "else if(" + this.helpers.uRSH(i) + "<" + this.helpers.uRTH(i) + ")" + this.helpers.tRD(i) + "=1;" + "else if(" + this.helpers.uRS(i) + "<" + this.helpers.uRT(i) + ")" + this.helpers.tRD(i) + "=1;" + "else " + this.helpers.tRD(i) + "=0;" + this.helpers.tRDH(i) + "=0}";
    };

    C1964jsEmulator.prototype.r4300i_slti = function(i) {
      var soffset_imm_hi, uoffset_imm_lo;
      uoffset_imm_lo = void 0;
      soffset_imm_hi = (this.helpers.soffset_imm(i)) >> 31;
      uoffset_imm_lo = (this.helpers.soffset_imm(i)) >>> 0;
      return "{if(" + this.helpers.RSH(i) + ">" + soffset_imm_hi + ")" + this.helpers.tRT(i) + "=0;" + "else if(" + this.helpers.RSH(i) + "<" + soffset_imm_hi + ")" + this.helpers.tRT(i) + "=1;" + "else if(" + this.helpers.uRS(i) + "<" + uoffset_imm_lo + ")" + this.helpers.tRT(i) + "=1;" + "else " + this.helpers.tRT(i) + "=0;" + this.helpers.tRTH(i) + "=0}";
    };

    C1964jsEmulator.prototype.r4300i_sltiu = function(i) {
      var uoffset_imm_hi, uoffset_imm_lo;
      uoffset_imm_lo = void 0;
      uoffset_imm_hi = (this.helpers.soffset_imm(i) >> 31) >>> 0;
      uoffset_imm_lo = (this.helpers.soffset_imm(i)) >>> 0;
      return "{if(" + this.helpers.uRSH(i) + ">" + uoffset_imm_hi + ")" + this.helpers.tRT(i) + "=0;" + "else if(" + this.helpers.uRSH(i) + "<" + uoffset_imm_hi + ")" + this.helpers.tRT(i) + "=1;" + "else if(" + this.helpers.uRS(i) + "<" + uoffset_imm_lo + ")" + this.helpers.tRT(i) + "=1;" + "else " + this.helpers.tRT(i) + "=0;" + this.helpers.tRTH(i) + "=0}";
    };

    C1964jsEmulator.prototype.r4300i_cache = function(i) {
      this.log("todo: r4300i_cache");
      this.stopCompiling = true;
      return "";
    };

    C1964jsEmulator.prototype.r4300i_multu = function(i) {
      return "t.helpers.inter_multu(r,h," + i + ");";
    };

    C1964jsEmulator.prototype.r4300i_mult = function(i) {
      return "t.helpers.inter_mult(r,h," + i + ");";
    };

    C1964jsEmulator.prototype.r4300i_mflo = function(i) {
      return this.helpers.tRD(i) + "=r[32]," + this.helpers.tRDH(i) + "=h[32];";
    };

    C1964jsEmulator.prototype.r4300i_mfhi = function(i) {
      return this.helpers.tRD(i) + "=r[33]," + this.helpers.tRDH(i) + "=h[33];";
    };

    C1964jsEmulator.prototype.r4300i_mtlo = function(i) {
      return "r[32]=" + this.helpers.RS(i) + ",h[32]=" + this.helpers.RSH(i) + ";";
    };

    C1964jsEmulator.prototype.r4300i_mthi = function(i) {
      return "r[33]=" + this.helpers.RS(i) + ",h[33]=" + this.helpers.RSH(i) + ";";
    };

    C1964jsEmulator.prototype.r4300i_COP0_mfc0 = function(i) {
      var string;
      string = "";
      switch (this.helpers.fs(i)) {
        case consts.RANDOM:
          alert("RANDOM");
          break;
        case consts.COUNT:
          break;
      }
      return string += this.helpers.tRT(i) + "=t.cp0[" + this.helpers.fs(i) + "]," + this.helpers.tRTH(i) + "=t.cp0[" + this.helpers.fs(i) + "]>>31;";
    };

    C1964jsEmulator.prototype.r4300i_lb = function(i) {
      return this.helpers.tRTH(i) + "=(" + this.helpers.tRT(i) + "=m.lb(" + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i) + ")<<24>>24)>>8;";
    };

    C1964jsEmulator.prototype.r4300i_lbu = function(i) {
      return this.helpers.tRTH(i) + "=0," + this.helpers.tRT(i) + "=m.lb(" + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i) + ")&0x000000ff;";
    };

    C1964jsEmulator.prototype.r4300i_lh = function(i) {
      return this.helpers.tRTH(i) + "=(" + this.helpers.tRT(i) + "=m.lh(" + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i) + ")<<16>>16)>>16;";
    };

    C1964jsEmulator.prototype.r4300i_lhu = function(i) {
      return this.helpers.tRTH(i) + "=0," + this.helpers.tRT(i) + "=m.lh(" + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i) + ")&0x0000ffff;";
    };

    C1964jsEmulator.prototype.r4300i_sb = function(i) {
      return "m.sb(" + this.helpers.RT(i) + "," + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i) + ");";
    };

    C1964jsEmulator.prototype.r4300i_sh = function(i) {
      return "m.sh(" + this.helpers.RT(i) + "," + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i) + ");";
    };

    C1964jsEmulator.prototype.r4300i_srlv = function(i) {
      return this.helpers.tRDH(i) + "=(" + this.helpers.tRD(i) + "=" + this.helpers.RT(i) + ">>>(" + this.helpers.RS(i) + "&0x1f))>>31;";
    };

    C1964jsEmulator.prototype.r4300i_sllv = function(i) {
      return this.helpers.tRDH(i) + "=(" + this.helpers.tRD(i) + "=" + this.helpers.RT(i) + "<<(" + this.helpers.RS(i) + "&0x1f))>>31;";
    };

    C1964jsEmulator.prototype.r4300i_srav = function(i) {
      return this.helpers.tRDH(i) + "=(" + this.helpers.tRD(i) + "=" + this.helpers.RT(i) + ">>(" + this.helpers.RS(i) + "&0x1f))>>31;";
    };

    C1964jsEmulator.prototype.r4300i_COP1_cfc1 = function(i) {
      if (this.helpers.fs(i) === 0 || this.helpers.fs(i) === 31) {
        return this.helpers.tRTH(i) + "=(" + this.helpers.tRT(i) + "=t.cp1Con[" + this.helpers.fs(i) + "])>>31;";
      }
    };

    C1964jsEmulator.prototype.r4300i_COP1_ctc1 = function(i) {
      if (this.helpers.fs(i) === 31) {
        return "t.cp1Con[31]=" + this.helpers.RT(i) + ";";
      }
    };

    C1964jsEmulator.prototype.r4300i_ld = function(i) {
      return "{" + this.helpers.setVAddr(i) + this.helpers.tRT(i) + "=m.lw((vAddr+4)|0);" + this.helpers.tRTH(i) + "=m.lw(vAddr)}";
    };

    C1964jsEmulator.prototype.r4300i_lld = function(i) {
      return "{" + this.helpers.setVAddr(i) + this.helpers.tRT(i) + "=m.lw((vAddr+4)|0);" + this.helpers.tRTH(i) + "=m.lw(vAddr);t.LLbit=1}";
    };

    C1964jsEmulator.prototype.r4300i_sd = function(i, isDelaySlot) {
      var a, string;
      a = void 0;
      string = "{" + this.helpers.setVAddr(i) + "m.sw(" + this.helpers.RT(i) + ",(vAddr+4)|0";
      if (isDelaySlot === true) {
        a = (this.p + offset + 4) | 0;
        string += ", " + a + ", true);";
      } else {
        a = (this.p + offset) | 0;
        string += ", " + a + ");";
      }
      string += "m.sw(" + this.helpers.RTH(i) + ",vAddr";
      if (isDelaySlot === true) {
        a = (this.p + offset + 4) | 0;
        string += ", " + a + ", true)}";
      } else {
        a = (this.p + offset) | 0;
        string += ", " + a + ")}";
      }
      return string;
    };

    C1964jsEmulator.prototype.r4300i_dmultu = function(i) {
      return "t.helpers.inter_dmultu(r,h," + i + ");";
    };

    C1964jsEmulator.prototype.r4300i_dsll32 = function(i) {
      return this.helpers.tRDH(i) + "=" + this.helpers.RT(i) + "<<" + this.helpers.sa(i) + "," + this.helpers.tRD(i) + "=0;";
    };

    C1964jsEmulator.prototype.r4300i_dsra32 = function(i) {
      return this.helpers.tRD(i) + "=" + this.helpers.RTH(i) + ">>" + this.helpers.sa(i) + "," + this.helpers.tRDH(i) + "=" + this.helpers.RTH(i) + ">>31;";
    };

    C1964jsEmulator.prototype.r4300i_ddivu = function(i) {
      return "t.helpers.inter_ddivu(r,h," + i + ");";
    };

    C1964jsEmulator.prototype.r4300i_ddiv = function(i) {
      return "t.helpers.inter_ddiv(r,h," + i + ");";
    };

    C1964jsEmulator.prototype.r4300i_dadd = function(i) {
      this.log("todo: dadd");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_break = function(i) {
      this.log("todo: break");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_div = function(i) {
      return "t.helpers.inter_div(r,h," + i + ");";
    };

    C1964jsEmulator.prototype.r4300i_divu = function(i) {
      return "t.helpers.inter_divu(r,h," + i + ");";
    };

    C1964jsEmulator.prototype.r4300i_sra = function(i) {
      return this.helpers.tRDH(i) + "=(" + this.helpers.tRD(i) + "=" + this.helpers.RT(i) + ">>" + this.helpers.sa(i) + ")>>31;";
    };

    C1964jsEmulator.prototype.r4300i_COP0_tlbwi = function(i) {
      return "t.helpers.inter_tlbwi(t.cp0[" + consts.INDEX + "], t.tlb, t.cp0);";
    };

    C1964jsEmulator.prototype.r4300i_COP0_tlbp = function(i) {
      return "t.helpers.inter_tlbp(t.tlb, t.cp0);";
    };

    C1964jsEmulator.prototype.r4300i_COP0_tlbr = function(i) {
      return "t.helpers.inter_tlbr(t.tlb, t.cp0);";
    };

    C1964jsEmulator.prototype.r4300i_lwl = function(i) {
      var string;
      string = "{" + this.helpers.setVAddr(i);
      string += "var vAddrAligned=(vAddr&0xfffffffc)|0;var value=m.lw(vAddrAligned);";
      string += "switch(vAddr&3){case 0:" + this.helpers.tRT(i) + "=value;break;";
      string += "case 1:" + this.helpers.tRT(i) + "=(" + this.helpers.RT(i) + "&0x000000ff)|((value<<8)>>>0);break;";
      string += "case 2:" + this.helpers.tRT(i) + "=(" + this.helpers.RT(i) + "&0x0000ffff)|((value<<16)>>>0);break;";
      string += "case 3:" + this.helpers.tRT(i) + "=(" + this.helpers.RT(i) + "&0x00ffffff)|((value<<24)>>>0);break;}";
      return string += this.helpers.tRTH(i) + "=" + this.helpers.RT(i) + ">>31}";
    };

    C1964jsEmulator.prototype.r4300i_lwr = function(i) {
      var string;
      string = "{" + this.helpers.setVAddr(i);
      string += "var vAddrAligned=(vAddr&0xfffffffc)|0;var value=m.lw(vAddrAligned);";
      string += "switch(vAddr&3){case 3:" + this.helpers.tRT(i) + "=value;break;";
      string += "case 2:" + this.helpers.tRT(i) + "=(" + this.helpers.RT(i) + "&0xff000000)|(value>>>8);break;";
      string += "case 1:" + this.helpers.tRT(i) + "=(" + this.helpers.RT(i) + "&0xffff0000)|(value>>>16);break;";
      string += "case 0:" + this.helpers.tRT(i) + "=(" + this.helpers.RT(i) + "&0xffffff00)|(value>>>24);break;}";
      return string += this.helpers.tRTH(i) + "=" + this.helpers.RT(i) + ">>31}";
    };

    C1964jsEmulator.prototype.r4300i_swl = function(i) {
      var string;
      string = "{" + this.helpers.setVAddr(i);
      string += "var vAddrAligned=(vAddr&0xfffffffc)|0;var value=m.lw(vAddrAligned);";
      string += "switch(vAddr&3){case 0:value=" + this.helpers.RT(i) + ";break;";
      string += "case 1:value=((value&0xff000000)|(" + this.helpers.RT(i) + ">>>8));break;";
      string += "case 2:value=((value&0xffff0000)|(" + this.helpers.RT(i) + ">>>16));break;";
      string += "case 3:value=((value&0xffffff00)|(" + this.helpers.RT(i) + ">>>24));break;}";
      return string += "m.sw(value,vAddrAligned,false)}";
    };

    C1964jsEmulator.prototype.r4300i_swr = function(i) {
      var string;
      string = "{" + this.helpers.setVAddr(i);
      string += "var vAddrAligned=(vAddr&0xfffffffc)|0;var value=m.lw(vAddrAligned);";
      string += "switch(vAddr&3){case 3:value=" + this.helpers.RT(i) + ";break;";
      string += "case 2:value=((value & 0x000000FF)|((" + this.helpers.RT(i) + "<<8)>>>0));break;";
      string += "case 1:value=((value & 0x0000FFFF)|((" + this.helpers.RT(i) + "<<16)>>>0));break;";
      string += "case 0:value=((value & 0x00FFFFFF)|((" + this.helpers.RT(i) + "<<24)>>>0));break;}";
      return string += "m.sw(value,vAddrAligned,false)}";
    };

    C1964jsEmulator.prototype.r4300i_lwc1 = function(i) {
      return "t.cp1_i[" + this.helpers.FT32ArrayView(i) + "]=m.lw(" + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i) + ");";
    };

    C1964jsEmulator.prototype.r4300i_ldc1 = function(i) {
      var string;
      string = "{" + this.helpers.setVAddr(i) + "t.cp1_i[" + this.helpers.FT32ArrayView(i) + "]=m.lw((vAddr+4)|0);";
      return string += "t.cp1_i[" + this.helpers.FT32HIArrayView(i) + "]=m.lw((vAddr)|0)}";
    };

    C1964jsEmulator.prototype.r4300i_swc1 = function(i, isDelaySlot) {
      var a, string;
      a = void 0;
      string = "m.sw(t.cp1_i[" + this.helpers.FT32ArrayView(i) + "]," + this.helpers.RS(i) + "+" + this.helpers.soffset_imm(i);
      if (isDelaySlot === true) {
        a = (this.p + offset + 4) | 0;
        string += ", " + a + ", true);";
      } else {
        a = (this.p + offset) | 0;
        string += ", " + a + ");";
      }
      return string;
    };

    C1964jsEmulator.prototype.r4300i_sdc1 = function(i, isDelaySlot) {
      var a, string;
      a = void 0;
      string = "{" + this.helpers.setVAddr(i) + "m.sw(t.cp1_i[" + this.helpers.FT32ArrayView(i) + "],(vAddr+4)|0";
      if (isDelaySlot === true) {
        a = (this.p + offset + 4) | 0;
        string += ", " + a + ", true);";
      } else {
        a = (this.p + offset) | 0;
        string += ", " + a + ");";
      }
      string += "m.sw(t.cp1_i[" + this.helpers.FT32HIArrayView(i) + "],(vAddr)|0";
      if (isDelaySlot === true) {
        a = (this.p + offset + 4) | 0;
        string += ", " + a + ", true)}";
      } else {
        a = (this.p + offset) | 0;
        string += ", " + a + ")}";
      }
      return string;
    };

    C1964jsEmulator.prototype.r4300i_COP1_mtc1 = function(i) {
      return "t.cp1_i[" + this.helpers.FS32ArrayView(i) + "]=" + this.helpers.RT(i) + ";";
    };

    C1964jsEmulator.prototype.r4300i_COP1_mfc1 = function(i) {
      return this.helpers.tRTH(i) + "=(" + this.helpers.tRT(i) + "=t.cp1_i[" + this.helpers.FS32ArrayView(i) + "])>>31;";
    };

    C1964jsEmulator.prototype.r4300i_COP1_cvts_w = function(i) {
      return "t.cp1_f[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_i[" + this.helpers.FS32ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_cvtw_s = function(i) {
      return "t.cp1_i[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_f[" + this.helpers.FS32ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_div_s = function(i) {
      return "t.cp1_f[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_f[" + this.helpers.FS32ArrayView(i) + "]/t.cp1_f[" + this.helpers.FT32ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_div_d = function(i) {
      return "t.cp1_f64[" + this.helpers.FD64ArrayView(i) + "]=t.cp1_f64[" + this.helpers.FS64ArrayView(i) + "]/t.cp1_f64[" + this.helpers.FT64ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_mul_s = function(i) {
      return "t.cp1_f[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_f[" + this.helpers.FS32ArrayView(i) + "]*t.cp1_f[" + this.helpers.FT32ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_mul_d = function(i) {
      return "t.cp1_f64[" + this.helpers.FD64ArrayView(i) + "]=t.cp1_f64[" + this.helpers.FS64ArrayView(i) + "]*t.cp1_f64[" + this.helpers.FT64ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_mov_s = function(i) {
      return "t.cp1_i[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_i[" + this.helpers.FS32ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_mov_d = function(i) {
      return "t.cp1_f64[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_f64[" + this.helpers.FS32ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_add_s = function(i) {
      return "t.cp1_f[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_f[" + this.helpers.FS32ArrayView(i) + "]+t.cp1_f[" + this.helpers.FT32ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_sub_s = function(i) {
      return "t.cp1_f[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_f[" + this.helpers.FS32ArrayView(i) + "]-t.cp1_f[" + this.helpers.FT32ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_cvtd_s = function(i) {
      return "t.cp1_f64[" + this.helpers.FD64ArrayView(i) + "]=t.cp1_f[" + this.helpers.FS32ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_cvtd_w = function(i) {
      return "t.cp1_f64[" + this.helpers.FD64ArrayView(i) + "]=t.cp1_i[" + this.helpers.FS32ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_cvts_d = function(i) {
      return "t.cp1_f[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_f64[" + this.helpers.FS64ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_cvtw_d = function(i) {
      return "t.cp1_i[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_f64[" + this.helpers.FS64ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_add_d = function(i) {
      return "t.cp1_f64[" + this.helpers.FD64ArrayView(i) + "]=t.cp1_f64[" + this.helpers.FS64ArrayView(i) + "]+t.cp1_f64[" + this.helpers.FT64ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_sub_d = function(i) {
      return "t.cp1_f64[" + this.helpers.FD64ArrayView(i) + "]=t.cp1_f64[" + this.helpers.FS64ArrayView(i) + "]-t.cp1_f64[" + this.helpers.FT64ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_truncw_d = function(i) {
      return "t.cp1_i[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_f64[" + this.helpers.FS64ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_truncw_s = function(i) {
      return "t.cp1_i[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_f[" + this.helpers.FS32ArrayView(i) + "];";
    };

    C1964jsEmulator.prototype.r4300i_COP1_neg_s = function(i) {
      return "t.cp1_i[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_i[" + this.helpers.FS32ArrayView(i) + "]^0x80000000;";
    };

    C1964jsEmulator.prototype.r4300i_COP1_neg_d = function(i) {
      return "t.cp1_i[" + this.helpers.FD32HIArrayView(i) + "]=t.cp1_i[" + this.helpers.FS32HIArrayView(i) + "]^0x80000000;";
    };

    C1964jsEmulator.prototype.r4300i_COP1_abs_s = function(i) {
      return "t.cp1_i[" + this.helpers.FD32ArrayView(i) + "]=t.cp1_i[" + this.helpers.FS32ArrayView(i) + "]&0x7fffffff;";
    };

    C1964jsEmulator.prototype.r4300i_COP1_abs_d = function(i) {
      return "t.cp1_i[" + this.helpers.FD32HIArrayView(i) + "]=t.cp1_i[" + this.helpers.FS32HIArrayView(i) + "]&0x7fffffff;";
    };

    C1964jsEmulator.prototype.r4300i_COP1_sqrt_s = function(i) {
      return "t.cp1_f[" + this.helpers.FD32ArrayView(i) + "]=Math.sqrt(t.cp1_f[" + this.helpers.FS32ArrayView(i) + "]);";
    };

    C1964jsEmulator.prototype.r4300i_COP1_sqrt_d = function(i) {
      return "t.cp1_f64[" + this.helpers.FD64ArrayView(i) + "]=Math.sqrt(t.cp1_f64[" + this.helpers.FS64ArrayView(i) + "]);";
    };

    C1964jsEmulator.prototype.r4300i_sync = function(i) {
      this.log("todo: sync");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_sdr = function(i) {
      this.log("todo: sdr");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_ldr = function(i) {
      this.log("todo: ldr");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_sdl = function(i) {
      this.log("todo: sdl");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_ldl = function(i) {
      this.log("todo: ldl");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_sc = function(i) {
      this.log("todo: sc");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_scd = function(i) {
      this.log("todo: scd");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_daddi = function(i) {
      return "t.helpers.inter_daddi(r,h," + i + ");";
    };

    C1964jsEmulator.prototype.r4300i_teq = function(i) {
      this.log("todo: r4300i_teq");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_tgeu = function(i) {
      this.log("todo: r4300i_tgeu");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_tlt = function(i) {
      this.log("todo: r4300i_tlt");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_tltu = function(i) {
      this.log("todo: r4300i_tltu");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_tne = function(i) {
      this.log("todo: r4300i_tne");
      return "";
    };

    C1964jsEmulator.prototype.r4300i_daddiu = function(i) {
      return "t.helpers.inter_daddiu(r,h," + i + ");";
    };

    C1964jsEmulator.prototype.r4300i_daddu = function(i) {
      return "t.helpers.inter_daddu(r,h," + i + ");";
    };

    C1964jsEmulator.prototype.r4300i_C_F_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_UN_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_EQ_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_UEQ_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_OLT_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_ULT_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_OLE_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_ULE_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_SF_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_NGLE_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_SEQ_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_NGL_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_LT_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_NGE_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_LE_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_NGT_S = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_s(" + i + ",t.cp1Con,t.cp1_f);";
    };

    C1964jsEmulator.prototype.r4300i_C_F_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_UN_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_EQ_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_UEQ_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_OLT_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_ULT_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_OLE_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_ULE_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_SF_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_NGLE_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_SEQ_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_NGL_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_LT_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_NGE_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_LE_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    C1964jsEmulator.prototype.r4300i_C_NGT_D = function(i) {
      return "t.helpers.inter_r4300i_C_cond_fmt_d(" + i + ",t.cp1Con,t.cp1_f64);";
    };

    return C1964jsEmulator;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.C1964jsEmulator = C1964jsEmulator;

  root.consts = consts;

}).call(this);
